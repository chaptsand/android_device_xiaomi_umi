type batterysecret, domain;
type batterysecret_exec, exec_type, vendor_file_type, file_type;
init_daemon_domain(batterysecret)

# {
#   Allow battery secret to read inside
#   mnt_vendor_file and vendor_sysfs_battery_supply
#   directories
# }
allow batterysecret {
  mnt_vendor_file
  vendor_sysfs_battery_supply
}:dir r_dir_perms;

# {
#   Allow batterysecret to read files in
#   cgroup/persist_subsys_file/roots/sysfs_type/
#   vendor_sysfs_usb_supply/vendor_sysfs_usbpd_device
#   directories
# }
r_dir_file(batterysecret, cgroup)
r_dir_file(batterysecret, persist_subsys_file)
r_dir_file(batterysecret, rootfs)
r_dir_file(batterysecret, sysfs_type)
r_dir_file(batterysecret, vendor_sysfs_usb_supply)
r_dir_file(batterysecret, vendor_sysfs_usbpd_device)

# {
#   Allow battery secret to write to
#   persist_subsys_file/sysfs_usb/vendor_sysfs_battery_supply/
#   vendor_sysfs_usb_supply/vendor_sysfs_usbpd_device
# }
allow batterysecret {
  persist_subsys_file
  sysfs_usb
  vendor_sysfs_battery_supply
  vendor_sysfs_usb_supply
  vendor_sysfs_usbpd_device
}:file w_file_perms;

# Allow batterysecret to read sysfs_batteryinfo
allow batterysecret sysfs_batteryinfo:file r_file_perms;

# Allow batterysecret to read and write to /dev/kmsg
allow batterysecret kmsg_device:chr_file rw_file_perms;

# Allow battery secret to create_socket_perms_no_ioctl
allow batterysecret self:netlink_kobject_uevent_socket create_socket_perms_no_ioctl;

# Allow batterysecret to manage wakelocks
wakelock_use(batterysecret)
